var map;function initmap(){var worldBounds=L.latLngBounds([-60,-170],[85,179]),maxZoom=5,parsedQuery;function parseQuery(params){var parsed=new Object,value,i,len;if(typeof params.body=="string"){value=params.body.trim().toUpperCase();if(L.KSP.CelestialBody[value]instanceof L.KSP.CelestialBody&&L.KSP.CelestialBody[value].addedOn>0){parsed.body=L.KSP.CelestialBody[value]}}if(typeof params.zoom=="string"){value=params.zoom.trim().toLowerCase();if(value=="fit"){parsed.fitWorld=true}else{value=parseInt(value,10);if(!isNaN(value)){parsed.zoom=value}}}if(typeof params.center=="string"){var decimalRegex=/^-*[0-9]+(\.[0-9]+)*,-*[0-9]+(\.[0-9]+)*$/;value=params.center;if(decimalRegex.test(value)){value=value.split(",",2);parsed.center=L.latLng(parseFloat(value[0]),parseFloat(value[1])).wrap()}}if(typeof params.style=="string"){value=params.style;if(value=="sat"){parsed.baseLayerType=L.KSP.TileLayer.TYPE_SATELLITE}else if(value=="color"){parsed.baseLayerType=L.KSP.TileLayer.TYPE_COLORRELIEF}else if(value=="slope"){parsed.baseLayerType=L.KSP.TileLayer.TYPE_SLOPE}else if(value=="biome"){parsed.baseLayerType=L.KSP.TileLayer.TYPE_BIOME}}if(typeof params.overlays=="string"){var overlays=[];value=params.overlays.split(",");len=value.length;for(i=0;i<len;i++){if(value[i]=="spacecenters"){if(overlays.indexOf(L.KSP.LayerGroup.TYPE_SPACECENTER)<0){overlays.push(L.KSP.LayerGroup.TYPE_SPACECENTER)}}else if(value[i]=="anomalies"){if(overlays.indexOf(L.KSP.LayerGroup.TYPE_ANOMALY)<0){overlays.push(L.KSP.LayerGroup.TYPE_ANOMALY)}}else if(value[i]=="poi"){if(overlays.indexOf(L.KSP.LayerGroup.TYPE_POI)<0){overlays.push(L.KSP.LayerGroup.TYPE_POI)}}}if(overlays.length>0){parsed.overlayTypes=overlays}}if(typeof params.loc=="string"){params.loc=[params.loc]}if(L.Util.isArray(params.loc)){var locRegex=/^(-*[0-9]+(?:\.[0-9]+)*,-*[0-9]+(?:\.[0-9]+)*)(?:,(.*))?$/;len=params.loc.length;if(len>0){var marker,bounds=[];parsed.markers=[]}for(i=0;i<len;i++){value=params.loc[i].match(locRegex);if(value){value.shift();marker=value[0].split(",",2);marker=L.latLng(parseFloat(marker[0]),parseFloat(marker[1])).wrap();bounds.push(marker);marker=L.marker(marker);if(value[1]){marker.bindPopup(value[1])}parsed.markers.push(marker)}}if(bounds.length>=2){parsed.markerBounds=L.latLngBounds(bounds);console.log(parsed.markerBounds.isValid())}else if(bounds.length==1){parsed.hasSingleMarker=true}}return parsed}parsedQuery=parseQuery(URI().search(true));var options={positionControl:false,scaleControl:false,layers:[parsedQuery.body||L.KSP.CelestialBody.DEFAULT],baseLayerType:parsedQuery.baseLayerType||0,overlayTypes:parsedQuery.overlayTypes||[],maxZoom:maxZoom};if(parsedQuery.markers){options.layers[0].overlays["From URL"]=L.KSP.layerGroup(L.KSP.LayerGroup.TYPE_FROMURL,parsedQuery.markers);options.overlayTypes.push(L.KSP.LayerGroup.TYPE_FROMURL)}map=new L.KSP.Map("map",options);map.scaleControl=(new L.KSP.Control.Scale).addTo(map);map.infoControl=L.Control.info(map).addTo(map);map.loadingControl=L.Control.loading({separate:false}).addTo(map);var zoom;if(typeof parsedQuery.zoom=="number"){zoom=parsedQuery.zoom}else if(parsedQuery.fitWorld){zoom=map.getBoundsZoom(worldBounds)}else if(parsedQuery.markerBounds){zoom=map.getBoundsZoom(parsedQuery.markerBounds.pad(.05))}else if(parsedQuery.hasSingleMarker){zoom=maxZoom}else{zoom=map.getBoundsZoom(worldBounds)}var center;if(parsedQuery.center){center=parsedQuery.center}else if(parsedQuery.fitWorld){center=L.latLng([0,0])}else if(parsedQuery.markerBounds){center=parsedQuery.markerBounds.getCenter()}else if(parsedQuery.hasSingleMarker){center=parsedQuery.markers[0].getLatLng()}else{center=L.latLng([0,0])}map.setView(center,zoom);if(parsedQuery.hasSingleMarker){parsedQuery.markers[0].openPopup()}L.eventTracker.ga(map,_gaq).track()}